runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?actionButton
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
install.packages(c("assertive.base", "BH", "brio", "broom", "cli", "cpp11", "crayon", "crosstalk", "data.table", "DBI", "dbplyr", "diffobj", "dplyr", "DT", "fansi", "fastmap", "forcats", "gert", "ggplot2", "hms", "htmltools", "httpuv", "knitr", "memoise", "promises", "rappdirs", "Rcpp", "reprex", "rlang", "shiny", "shinyWidgets", "tibble", "tinytex", "usethis", "waldo", "withr", "xfun"))
library(shiny)  # ver1.5 June23, 2020
library(shinydashboard)  # ver0.7.1 October 17, 2018
library(shinydashboardPlus)  # ver0.7.5 July 15, 2020
library(shinyWidgets)  # ver0.5.4 October 6, 2020
library(tidyverse)  # ver1.3.0 November 21, 2019
#library(Hmisc)  # ver4.4-1 August 11, 2020
library(rmarkdown)  # ver2.5 October 21, 2020
library(DT)  # ver0.16 October 14, 2020
library(tools)  # ver4.0.3
library(shinyjs)  # ver2.0.0 September 9, 2020
library(sodium)  # ver1.1 March 30, 2017
library(shinyBS)  # ver0.62 devtools::install_github("ebailey78/shinyBS", ref="shinyBS3")
#library(extrafont)
library(shinyLP)  # ver1.1.2 April 25, 2018
library(rdrop2)  # ver0.8.2.1 August 5, 2020
library(shinyalert)  # ver2.0.0 September 12, 2020
library(emayili)  # ver0.4.4 October 2, 2020
library(shinyhelper)  # ver0.3.2 November 9, 2020
?box
runApp()
install.packages(c("bitops", "brio", "callr", "cli", "colorspace", "curl", "devtools", "dplyr", "ellipsis", "emayili", "gh", "haven", "highr", "httpuv", "installr", "jquerylib", "knitr", "later", "openssl", "processx", "raster", "rlang", "rmarkdown", "sass", "shinydashboardPlus", "stringi", "tidyselect", "vctrs", "viridis", "waiter", "withr"))
install.packages(c("viridis", "waiter"))
shiny::runApp()
runApp()
?selectizeInput
install.packages("NCmisc")
p <- NCmisc::list.functions.in.file("app.r")
View(p)
summary(p)
p <- NCmisc::list.functions.in.file("app.R")
View(p)
summary(p)
P$'package:shinyhelper'
p$package:shinyhelper
View(p)
state.name
runApp()
shiny::runApp()
install.packages("aws.signature", repos = c(cloudyr = "http://cloudyr.github.io/drat", getOption("repos")))
install.packages("aws.ses", repos = c(cloudyr = "http://cloudyr.github.io/drat", getOption("repos")))
library(shiny)
library(aws.signature)
library(aws.ses)
Sys.setenv("AWS_ACCESS_KEY_ID" = "AKIATBFZVGQZOJO7VP4G",
"AWS_SECRET_ACCESS_KEY" = "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",
"AWS_DEFAULT_REGION" = "us-east-1",
"AWS_SESSION_TOKEN" = "mytoken")
verify_identity("romriellsteven@gmail.com")
send_email("Test Email Body", subject = "Test Email",
from = "romriellsteven@gmail.com", to = "sromriell122214@gmail.com")
send_email(message = "Test Email Body", subject = "Test Email",
from = "romriellsteven@gmail.com", to = "sromriell122214@gmail.com")
send_email(message = "Plain text body",
html = "<div><p style='font-weight=bold;'>HTML text body</p></div>",
subject = "Test Email",
from = "romriellsteven@gmail.com", to = "sromriell122214@gmail.com")
verify_identity("romriellsteven@gmail.com")
library(shiny)
library(aws.signature)
library(aws.ses)
?verify_id
verify_id("romriellsteven@gmail.com")
remotes::install_github("cloudyr/aws.ses")
install.packages("aws.ses", repos = c(cloudyr = "http://cloudyr.github.io/drat", getOption("repos")))
install.packages("aws.ses", repos = c(cloudyr = "http://cloudyr.github.io/drat", getOption("repos")))
?send_email
library(shiny)
library(aws.signature)
library(aws.ses)
?aws.ses
?send_email
?get_verification_attrs
verify_id("romriellsteven@gmail.com")
verify_id("romriellsteven@gmail.com")
send_email(message = "Plain text body",
html = "<div><p style='font-weight=bold;'>HTML text body</p></div>",
subject = "Test Email",
from = "romriellsteven@gmail.com", to = "sromriell122214@gmail.com")
Sys.setenv("AWS_ACCESS_KEY_ID" = "AKIATBFZVGQZOJO7VP4G",
"AWS_SECRET_ACCESS_KEY" = "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",
"AWS_DEFAULT_REGION" = "us-east-1",
"AWS_SESSION_TOKEN" = "mytoken")
get_verification_attrs("romriellsteven@gmail.com")
?`aws.ses-package`
verify_id("romriellsteven@gmail.com")
send_email(message = "Plain text body",
html = "<div><p style='font-weight=bold;'>HTML text body</p></div>",
subject = "Test Email",
from = "romriellsteven@gmail.com", to = "sromriell122214@gmail.com")
install.packages("mailR")
library(mailR)
library(mailR)
Smtp.Username = "AKIATBFZVGQZP7ASN6D4"
Smpt.Password = "BANRq3uVxLR+aeeeGHXOmv6MAFWT8AMjCd0taGTScUWW"
Smtp.Server = "email-smtp.us-east-1.amazonaws.com"
Smtp.Port = "25"
Smtp.From = "romriellsteven@gmail.com"
send.mail(from = Smtp.From,
to = "sromriell122214@gmail.com",
#        replyTo = "Name <listener@domain.com>",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = Smtp.Server,
port = Smtp.Port,
user.name = Smpt.Username,
passwd = Smpt.Password,
ssl = TRUE),
authenticate = TRUE,
#          attach.files="/tmp/Sample_DB.xlsx",
send = TRUE)
library(tidyverse)
send.mail(from = Smtp.From,
to = "sromriell122214@gmail.com",
#        replyTo = "Name <listener@domain.com>",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = Smtp.Server,
port = Smtp.Port,
user.name = Smpt.Username,
passwd = Smpt.Password,
ssl = TRUE),
authenticate = TRUE,
#          attach.files="/tmp/Sample_DB.xlsx",
send = TRUE)
send.mail(from = Smtp.From,
to = "sromriell122214@gmail.com",
#        replyTo = "Name <listener@domain.com>",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = Smtp.Server,
port = Smtp.Port,
user.name = Smtp.Username,
passwd = Smpt.Password,
ssl = TRUE),
authenticate = TRUE,
#          attach.files="/tmp/Sample_DB.xlsx",
send = TRUE)
library(mailR)
send.mail(from = Smtp.From,
to = "sromriell122214@gmail.com",
#        replyTo = "Name <listener@domain.com>",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = Smtp.Server,
port = Smtp.Port,
user.name = Smtp.Username,
passwd = Smpt.Password,
ssl = TRUE),
authenticate = TRUE,
#          attach.files="/tmp/Sample_DB.xlsx",
send = TRUE)
library(shiny)
#library(aws.signature)
#library(aws.ses)
library(tidyverse)
library(mailR)
Smtp.Username = "AKIATBFZVGQZP7ASN6D4"
Smpt.Password = "BANRq3uVxLR+aeeeGHXOmv6MAFWT8AMjCd0taGTScUWW"
Smtp.Server = "email-smtp.us-east-1.amazonaws.com"
Smtp.Port = "25"
Smtp.From = "romriellsteven@gmail.com"
send.mail(from = Smtp.From,
to = "sromriell122214@gmail.com",
#        replyTo = "Name <listener@domain.com>",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = Smtp.Server,
port = Smtp.Port,
user.name = Smtp.Username,
passwd = Smpt.Password,
ssl = TRUE),
authenticate = TRUE,
#          attach.files="/tmp/Sample_DB.xlsx",
send = TRUE)
Smtp.Username = "AKIATBFZVGQZP7ASN6D4"
Smpt.Password = "BANRq3uVxLR+aeeeGHXOmv6MAFWT8AMjCd0taGTScUWW"
Smtp.Server = "email-smtp.us-east-1.amazonaws.com"
Smtp.Port = "465"
Smtp.From = "romriellsteven@gmail.com"
send.mail(from = Smtp.From,
to = "sromriell122214@gmail.com",
#        replyTo = "Name <listener@domain.com>",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = Smtp.Server,
port = Smtp.Port,
user.name = Smtp.Username,
passwd = Smpt.Password,
ssl = TRUE),
authenticate = TRUE,
#          attach.files="/tmp/Sample_DB.xlsx",
send = TRUE)
sys.getenv("JAVA_HOME")
Sys.getenv("JAVA_HOME")
install.packages("rJava")
library(rJava)
send.mail(from = Smtp.From,
to = "sromriell122214@gmail.com",
#        replyTo = "Name <listener@domain.com>",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = Smtp.Server,
port = Smtp.Port,
user.name = Smtp.Username,
passwd = Smpt.Password,
ssl = TRUE),
authenticate = TRUE,
#          attach.files="/tmp/Sample_DB.xlsx",
send = TRUE)
library(shiny)
#library(aws.signature)
#library(aws.ses)
library(tidyverse)
library(mailR)
library(rJava)
send.mail(from = Smtp.From,
to = "sromriell122214@gmail.com",
#        replyTo = "Name <listener@domain.com>",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = Smtp.Server,
port = Smtp.Port,
user.name = Smtp.Username,
passwd = Smpt.Password,
ssl = TRUE),
authenticate = TRUE,
#          attach.files="/tmp/Sample_DB.xlsx",
send = TRUE)
library(shiny)
#library(aws.signature)
#library(aws.ses)
library(tidyverse)
library(mailR)
library(rJava)
#smpt_auth <- list(host.name="email-smtp.eu-west-1.amazonaws.com", port=25, user.name="kkkk", passwd="ppp", ssl=TRUE)
Smtp.Username = "AKIATBFZVGQZP7ASN6D4"
Smpt.Password = "BANRq3uVxLR+aeeeGHXOmv6MAFWT8AMjCd0taGTScUWW"
Smtp.Server = "email-smtp.us-east-1.amazonaws.com"
Smtp.Port = "465"
Smtp.From = "romriellsteven@gmail.com"
Sys.setenv(JAVA_HOME="")
library(shiny)
#library(aws.signature)
#library(aws.ses)
library(tidyverse)
library(mailR)
library(rJava)
send.mail(from = Smtp.From,
to = "sromriell122214@gmail.com",
#        replyTo = "Name <listener@domain.com>",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = Smtp.Server,
port = Smtp.Port,
user.name = Smtp.Username,
passwd = Smpt.Password,
ssl = TRUE),
authenticate = TRUE,
#          attach.files="/tmp/Sample_DB.xlsx",
send = TRUE)
library(shiny)
#library(aws.signature)
#library(aws.ses)
library(tidyverse)
library(mailR)
library(rJava)
Sys.getenv("JAVA_HOME")
send.mail(from = Smtp.From,
to = "sromriell122214@gmail.com",
#        replyTo = "Name <listener@domain.com>",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = Smtp.Server,
port = Smtp.Port,
user.name = Smtp.Username,
passwd = Smpt.Password,
ssl = TRUE),
authenticate = TRUE,
#          attach.files="/tmp/Sample_DB.xlsx",
send = TRUE)
Sys.setenv(JAVA_HOME='C:/Program Files/Java/jre1.8.0_291')
send.mail(from = Smtp.From,
to = "sromriell122214@gmail.com",
#        replyTo = "Name <listener@domain.com>",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = Smtp.Server,
port = Smtp.Port,
user.name = Smtp.Username,
passwd = Smpt.Password,
ssl = TRUE),
authenticate = TRUE,
#          attach.files="/tmp/Sample_DB.xlsx",
send = TRUE)
Sys.getenv("JAVA_HOME")
Smtp.Port = "25"
send.mail(from = Smtp.From,
to = "sromriell122214@gmail.com",
#        replyTo = "Name <listener@domain.com>",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = Smtp.Server,
port = Smtp.Port,
user.name = Smtp.Username,
passwd = Smpt.Password,
ssl = TRUE),
authenticate = TRUE,
#          attach.files="/tmp/Sample_DB.xlsx",
send = TRUE)
send.mail(from = Smtp.From,
to = "sromriell122214@gmail.com",
#        replyTo = "Name <listener@domain.com>",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = Smtp.Server,
port = Smtp.Port,
user.name = Smtp.Username,
passwd = Smpt.Password,
ssl = TRUE),
authenticate = TRUE,
#          attach.files="/tmp/Sample_DB.xlsx",
send = TRUE)
send.mail(from = Smtp.From,
to = "sromriell122214@gmail.com",
#        replyTo = "Name <listener@domain.com>",
subject = "Subject of the email",
body = "Body of the email",
smtp = list(host.name = Smtp.Server,
port = Smtp.Port,
user.name = Smtp.Username,
passwd = Smpt.Password,
ssl = TRUE),
authenticate = TRUE,
#          attach.files="/tmp/Sample_DB.xlsx",
send = TRUE)
install.packages("mailR", dep = T)
install.packages("mailR", dep = T)
install_github("rpremraj/mailR")
install.packages("devtools", dep = T)
library(devtools)
install_github("rpremraj/mailR")
install_github("rpremraj/mailR")
library(tidyverse)
library(emayili)
?envelope
email <- envelope(
to = "sromriell122214@gmail.com",
from = "romriellsteven@gmail.com",
subject = "This is a plain text message!",
text = "Hello!"
)
smtp <- server(host = "email-smtp.us-east-1.amazonaws.com",
port = 465,
username = "AKIATBFZVGQZP7ASN6D4",
password = "BANRq3uVxLR+aeeeGHXOmv6MAFWT8AMjCd0taGTScUWW")
smtp(email, verbose = TRUE)
email <- envelope(
to = "romriellsteven@gmail.com",
from = "romriellsteven@gmail.com",
subject = "This is a plain text message!",
text = "Hello!"
)
smtp <- server(host = "email-smtp.us-east-1.amazonaws.com",
port = 465,
username = "AKIATBFZVGQZP7ASN6D4",
password = "BANRq3uVxLR+aeeeGHXOmv6MAFWT8AMjCd0taGTScUWW")
smtp(email, verbose = TRUE)
email <- envelope(
to = "mackenzieromriell@gmail.com",
from = "romriellsteven@gmail.com",
subject = "This is an important message!",
text = "I LOVE YOU!"
)
smtp <- server(host = "email-smtp.us-east-1.amazonaws.com",
port = 465,
username = "AKIATBFZVGQZP7ASN6D4",
password = "BANRq3uVxLR+aeeeGHXOmv6MAFWT8AMjCd0taGTScUWW")
smtp(email, verbose = TRUE)
library(shiny)
#library(aws.signature)
#library(aws.ses)
library(tidyverse)
library(emayili)
#library(mailR)
#library(rJava)
#library(devtools)
email <- envelope(
to = "lcchapman@gmail.com",
from = "romriellsteven@gmail.com",
subject = "This is an important message!",
text = "This is a test!"
)
smtp <- server(host = "email-smtp.us-east-1.amazonaws.com",
port = 465,
username = "AKIATBFZVGQZP7ASN6D4",
password = "BANRq3uVxLR+aeeeGHXOmv6MAFWT8AMjCd0taGTScUWW")
smtp(email, verbose = TRUE)
library(installr)
updateR()
library(emayili)
library(tinytex)  # ver0.26 September 22, 2020
devtools::install_github("RinteRface/bs4Dash")
install.packages("devtools")
library(devtools)
devtools::install_github("RinteRface/bs4Dash")
bs4DashGallery()
library(bs4Dash)
bs4DashGallery()
install.packages("echarts4r")
install.packages("thematic")
bs4DashGallery()
library(shiny)  # ver1.5 June23, 2020
library(shinydashboard)  # ver0.7.1 October 17, 2018
library(shinydashboardPlus)  # ver0.7.5 July 15, 2020
library(shinyWidgets)  # ver0.5.4 October 6, 2020
shinyWidgetsGallery()
library(shiny)  # ver1.5 June23, 2020
library(shinydashboard)  # ver0.7.1 October 17, 2018
library(shinydashboardPlus)  # ver0.7.5 July 15, 2020
library(shinyWidgets)  # ver0.5.4 October 6, 2020
library(tidyverse)  # ver1.3.0 November 21, 2019
#library(Hmisc)  # ver4.4-1 August 11, 2020
library(rmarkdown)  # ver2.5 October 21, 2020
library(DT)  # ver0.16 October 14, 2020
library(tools)  # ver4.0.3
library(shinyjs)  # ver2.0.0 September 9, 2020
library(sodium)  # ver1.1 March 30, 2017
library(shinyBS)  # ver0.62 devtools::install_github("ebailey78/shinyBS", ref="shinyBS3")
#library(extrafont)
library(shinyLP)  # ver1.1.2 April 25, 2018
library(rdrop2)  # ver0.8.2.1 August 5, 2020
library(shinyalert)  # ver2.0.0 September 12, 2020
library(emayili)  # ver0.4.4 October 2, 2020
library(shinyhelper)  # ver0.3.2 November 9, 2020
install.packages("NCmisc")
library(NCmisc)
p <- NCmisc::list.functions.in.file("app.R")
summary(p)
p$'package:shinyBS'
p
p$package:shinyBS
p <- NCmisc::list.functions.in.file("app.R")
p$'package:shinyBS'
p$'package:shinyLP'
p$'package:shinyalert'
p$'package:shinyWidgets'
shinyWidgetsGallery()
shinyLP::runExample()
library(shinythemes)
library(shinythemes)
install.packages("shinythemes")
shinyLP::runExample()
library(tools)  # ver4.0.3
library(tools)  # ver4.0.3
shiny::runApp()
